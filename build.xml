<?xml version="1.0" encoding="UTF-8"?>
<project name="Janitor" default="jar" basedir=".">

    <taskdef resource="net/sf/antcontrib/antlib.xml" />
    <taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" />

    <!-- Globals -->
    <property name="src.dir" location="src"/>
    <property name="tmp.dir" location="tmp"/>
    <property name="jar.dir" location="jar"/>
    <property name="res.dir" location="res"/>
    <property name="lib.dir" location="lib"/>
    <property name="bin.dir" location="bin"/>
    <property name="cfg.dir" location="cfg"/>

    <!-- Paths -->
    <path id="classpath">
        <fileset dir="." includes="**/*.jar"/>
    </path>

    <!-- Start it -->
    <target name="init">
        <tstamp/>
        <mkdir dir="${tmp.dir}"/>
        <mkdir dir="${jar.dir}"/>
        <mkdir dir="${bin.dir}"/>
    </target>

    <!-- Build it -->
    <target name="compile" depends="init">
        <javac destdir="${tmp.dir}" includeantruntime="false">
            <src path="${src.dir}"/>
            <classpath>
                <path refid="classpath"/>
            </classpath>
        </javac>
    </target>

    <!-- Copy it -->
    <target name="copy" depends="compile">
        <unzip src="${lib.dir}/java-unrar-0.5.jar" dest="${tmp.dir}"/>
        <unzip src="${lib.dir}/ws-commons-util-1.0.2.jar" dest="${tmp.dir}"/>
        <unzip src="${lib.dir}/xmlrpc-client-3.1.3.jar" dest="${tmp.dir}"/>
        <unzip src="${lib.dir}/xmlrpc-common-3.1.3.jar" dest="${tmp.dir}"/>
        <unzip src="${lib.dir}/xmlrpc-server-3.1.3.jar" dest="${tmp.dir}"/>
        <unzip src="${lib.dir}/commons-logging-1.1.jar" dest="${tmp.dir}"/>
        <unzip src="${lib.dir}/commons-lang-2.6.jar" dest="${tmp.dir}"/>
        <unzip src="${lib.dir}/javolution-5.3.1.jar" dest="${tmp.dir}"/>
        <if>
        <os family="windows"/>
        <then>
            <exec dir="." executable="cmd" outputproperty="command.ouput">
                <arg line="/c SET ProgramFiles(x86)"/>
            </exec>
            <copy todir="${jar.dir}">
                <fileset dir="${cfg.dir}"/>
            </copy>
            <if>
                <contains string="${command.ouput}" substring="Program Files (x86)"/>
                <then>
                    <unzip src="${lib.dir}/swt-win32-x86_64.jar" dest="${tmp.dir}"/>
                </then>
                <else>
                    <unzip src="${lib.dir}/swt-win32-x86_32.jar" dest="${tmp.dir}"/>
                </else>
            </if>
        </then>
        <elseif>
            <os family="unix"/>
            <then>
                <exec dir="." executable="/bin/sh" outputproperty="command.ouput">
                    <arg line="/c uname -m"/>
                </exec>
                <copy todir="${jar.dir}">
                    <fileset dir="${cfg.dir}"/>
                </copy>
                <if>
                    <contains string="${command.ouput}" substring="_64"/>
                    <then>
                        <unzip src="${lib.dir}/swt-macosx-x86_64.jar" dest="${tmp.dir}"/>
                    </then>
                    <else>
                        <unzip src="${lib.dir}/swt-macosx-x86_32.jar" dest="${tmp.dir}"/>
                    </else>
                </if>
            </then>
        </elseif>
        </if>
        <unzip src="${lib.dir}/jsoup-1.6.3.jar" dest="${tmp.dir}"/>
    </target>

    <!-- Jar it -->
    <target name="jar" depends="copy">
        <jar destfile="${jar.dir}/${ant.project.name}.jar">
            <fileset dir="${tmp.dir}"/>
            <fileset dir="${res.dir}" />
            <manifest>
                <attribute name="Main-Class" value="${ant.project.name}"/>
            </manifest>
        </jar>
    </target>

    <!-- Run it -->
    <target name="execute" depends="jar">
        <java fork="true" classname="${ant.project.name}" dir="${jar.dir}">
            <classpath>
                <path refid="classpath"/>
                <path location="${jar.dir}/${ant.project.name}.jar"/>
            </classpath>
        </java>
    </target>

    <!-- Clean it -->
    <target name="clean">
        <tstamp/>
        <delete dir="${tmp.dir}"/>
        <delete dir="${jar.dir}"/>
        <delete dir="${bin.dir}"/>
    </target>

    <!-- Package it -->
    <target name="package" depends="jar">
        <launch4j configFile="binary.xml"/>
    </target>

</project>