<?xml version="1.0" encoding="UTF-8"?>
<project name="Downbox" default="jar" basedir=".">

    <taskdef resource="net/sf/antcontrib/antlib.xml" />
    <taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" />

    <!-- Globals -->
    <property name="title" value="Downbox" />
    <property name="version" value="0.1" />
    <property name="src.dir" location="src"/>
    <property name="tmp.dir" location="tmp"/>
    <property name="jar.dir" location="jar"/>
    <property name="res.dir" location="res"/>
    <property name="lib.dir" location="lib"/>
    <property name="bin.dir" location="bin"/>
    <property name="cfg.dir" location="cfg"/>
    <property name="pkg.dir" location="pkg"/>

    <!-- Paths -->
    <path id="classpath">
        <fileset dir="." includes="**/*.jar"/>
    </path>

    <!-- Start it -->
    <target name="init">
        <tstamp/>
        <mkdir dir="${tmp.dir}"/>
        <mkdir dir="${jar.dir}"/>
        <mkdir dir="${bin.dir}"/>
    </target>

    <!-- Build it -->
    <target name="compile" depends="init">
        <javac destdir="${tmp.dir}" includeantruntime="false">
            <src path="${src.dir}"/>
            <classpath>
                <path refid="classpath"/>
            </classpath>
        </javac>
    </target>

    <!-- Copy it -->
    <target name="copy" depends="compile">
        <unzip src="${lib.dir}/java-unrar-0.5.jar" dest="${tmp.dir}"/>
        <unzip src="${lib.dir}/ws-commons-util-1.0.2.jar" dest="${tmp.dir}"/>
        <unzip src="${lib.dir}/xmlrpc-client-3.1.3.jar" dest="${tmp.dir}"/>
        <unzip src="${lib.dir}/xmlrpc-common-3.1.3.jar" dest="${tmp.dir}"/>
        <unzip src="${lib.dir}/xmlrpc-server-3.1.3.jar" dest="${tmp.dir}"/>
        <unzip src="${lib.dir}/commons-logging-1.1.jar" dest="${tmp.dir}"/>
        <unzip src="${lib.dir}/commons-lang-2.6.jar" dest="${tmp.dir}"/>
        <unzip src="${lib.dir}/javolution-5.3.1.jar" dest="${tmp.dir}"/>
        <if>
        <os family="windows"/>
        <then>
            <exec dir="." executable="cmd" outputproperty="command.ouput">
                <arg line="/c SET ProgramFiles(x86)"/>
            </exec>
            <copy todir="${jar.dir}">
                <fileset dir="${cfg.dir}"/>
            </copy>
            <if>
                <contains string="${command.ouput}" substring="Program Files (x86)"/>
                <then>
                    <unzip src="${lib.dir}/swt-win32-x86_64.jar" dest="${tmp.dir}"/>
                </then>
                <else>
                    <unzip src="${lib.dir}/swt-win32-x86_32.jar" dest="${tmp.dir}"/>
                </else>
            </if>
        </then>
        <elseif>
            <os family="unix"/>
            <then>
                <exec dir="." executable="/bin/sh" outputproperty="command.ouput">
                    <arg line="/c uname -m"/>
                </exec>
                <copy todir="${jar.dir}">
                    <fileset dir="${cfg.dir}"/>
                </copy>
                <if>
                    <contains string="${command.ouput}" substring="_64"/>
                    <then>
                        <unzip src="${lib.dir}/swt-macosx-x86_64.jar" dest="${tmp.dir}"/>
                    </then>
                    <else>
                        <unzip src="${lib.dir}/swt-macosx-x86_32.jar" dest="${tmp.dir}"/>
                    </else>
                </if>
            </then>
        </elseif>
        </if>
        <unzip src="${lib.dir}/jsoup-1.6.3.jar" dest="${tmp.dir}"/>
    </target>

    <!-- Jar it -->
    <target name="jar" depends="copy">
        <jar destfile="${jar.dir}/${title}.jar">
            <fileset dir="${tmp.dir}"/>
            <fileset dir="${res.dir}" />
            <manifest>
                <attribute name="Main-Class" value="${title}"/>
            </manifest>
        </jar>
    </target>

    <!-- Run it -->
    <target name="execute" depends="jar">
        <java fork="true" classname="${title}" dir="${jar.dir}">
            <classpath>
                <path refid="classpath"/>
                <path location="${jar.dir}/${title}.jar"/>
            </classpath>
        </java>
    </target>

    <!-- Clean it -->
    <target name="clean">
        <tstamp/>
        <delete dir="${tmp.dir}"/>
        <delete dir="${jar.dir}"/>
        <delete dir="${bin.dir}"/>
    </target>

        <!--<launch4j configFile="binary.xml"/>-->

    <target name="distribute" depends="jar" description="Build an os specific distribution file">

        <!-- Package it into a Macintosh application -->
        
        <taskdef name="jarbundler" classname="net.sourceforge.jarbundler.JarBundler" classpath="app/jarbundler.jar" />

        <jarbundler dir="${pkg.dir}" name="${title}" version="${version}" build="${version}" bundleid="downbox" jar="${jar.dir}/Downbox.jar" stubfile="app/JavaApplicationStub" workingdirectory="$APP_PACKAGE/Contents/Resources/Java" mainclass="Downbox" jvmversion="1.7+" vmoptions="-Xmx256m">
            <resourcefileset dir="${cfg.dir}" includes="*"/>
            <resourcefileset dir="app" includes="*.icns"/>
            <execfileset dir="app" includes="install.sh"/>
            <execfileset dir="app" includes="downbox"/>
        </jarbundler>

        <tar destfile="${title}_${version}.app.tar">
            <tarfileset dir="pkg" includes="${title}.app/**" excludes="**/MacOS/**" />
            <tarfileset dir="pkg" includes="${title}.app/**/MacOS/**" filemode="755" />
        </tar>


        <!-- Package it into a Debian package -->
        
        <taskdef resource="ant_deb_task.properties" classpath="deb/ant-deb.jar" />

        <deb todir="." package="downbox" version="${version}" section="misc" depends="sun-java7-jre" homepage="http://downbox.github.net" priority="optional" preinst="deb/preinst" postinst="deb/postinst" postrm="deb/postrm" prerm="deb/prerm" maintainer="Mridang Agarwalla">
            <description synopsis="Small, lightweight, automated downloads organiser">Downbox</description>
            <tarfileset fullpath="usr/share/downbox/Downbox.jar" file="${jar.dir}/Downbox.jar" />
            <tarfileset prefix="usr/share/downbox" file="deb/icon.svg" />
            <tarfileset prefix="usr/share/downbox/bin" file="deb/downbox.sh" filemode="755" />
            <tarfileset prefix="usr/share/applications" file="deb/Downbox.desktop" />
        </deb>


        <!-- Package it into a Windows installer -->
       
        <launch4j configFile="msi/executable.xml"/>
       
        <exec executable="candle.exe" dir="." failonerror="true">
            <arg line="msi/installer.xml -out pkg/msi.wixobj -arch x86 -dversion=${version}"/>
        </exec>
       
        <exec executable="light.exe" dir="." failonerror="true">
            <arg line="pkg/msi.wixobj -sval -ext WixUIExtension -out ${title}_${version}_x86.msi" />
        </exec>
       
    </target>

</project>